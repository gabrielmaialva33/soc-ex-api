_id: spc_ed73a703bd174207a1b706fe20ce6231
type: ApiSpec
parentId: wrk_08aac754bd244816a6671f7ff3e801d9
modified: 1683564056802
created: 1683563734321
fileName: base-streaming-server-v2.git
contents: >
  openapi: 3.0.3

  info:
    version: 1.0.1
    title: Yazo App
    description: 'This is a Yazo App server. All docs on openapi are available.'
    termsOfService: https://www.yazo.com.br/politica-de-privacidade-e-termos-de-uso
    contact:
      name: Yazo Development
      email: 'development@yazo.com.br'
      url: https://www.yazo.com.br/#contato
    x-logo:
      url: https://www.yazo.com.br/wp-content/uploads/2020/05/logo-yazo.png
      altText: Yazo Logo
    license:
      name: 'Yazo License'
      url: https://www.yazo.com.br/politica-de-privacidade-e-termos-de-uso
  servers:
    - url: https://desenvolvimento-backend-v2.herokuapp.com
      description: Heroku server
    - url: http://localhost:3333
      description: Local server

  paths:
    /login:
      post:
        summary: Login user
        description: Login user in Yazo App
        operationId: login.user
        tags:
          - Session
        parameters:
          - in: header
            name: Product-Identifier
            schema:
              type: string
              example: '1' # 1 = Yazo Web | 2 = Yazo App
            required: true
            description: 'Product Identifier of identification of the product that is using the API.'
            example: '1'
        requestBody:
          description: Login
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          required: true

        responses:
          '200':
            description: login user response object
            content:
              application/json:
                schema:
                  properties:
                    user:
                      $ref: '#/components/schemas/User'
                    auth:
                      $ref: '#/components/schemas/Auth'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '401':
            description: Unauthorized
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'

    # auth config routes
    /admin/auth_config/product/{auth_product_id}:
      get:
        summary: Get auth config by product
        description: Get auth config of product
        operationId: admin.auth_config.product.get
        tags:
          - Admin - Auth Config
        parameters:
          - in: path
            name: auth_product_id
            schema:
              type: string
              example: '1' # 1 = Yazo Web | 2 = Yazo App
            required: true
            description: 'Product Identifier of identification of the product that is using the API.'
            example: '1'
        security:
          - bearerToken: []
        responses:
          '200':
            description: auth config response object
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/AuthConfig'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
    /admin/auth_config/{auth_config_id}:
      put:
        summary: Edit auth config
        description: Edit auth config
        operationId: admin.auth_config.edit
        tags:
          - Admin - Auth Config
        parameters:
          - in: path
            name: auth_config_id
            schema:
              type: string
              example: '1' # 1 = Yazo Web | 2 = Yazo App
            required: true
            description: 'Product Identifier of identification of the product that is using the API.'
            example: '1'
        security:
          - bearerToken: []
        requestBody:
          description: Update auth config
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditAuthConfig'
          required: true
        responses:
          '200':
            description: auth config response object
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/AuthConfig'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
    /user/auth_config/list/product/{auth_product_id}/items:
      get:
        summary: Get list of users
        description: Get list of users
        operationId: user.auth_config.list.product.items
        tags:
          - User - Auth Config
        parameters:
          - in: path
            name: auth_product_id
            schema:
              type: string
              example: '1' # 1 = Yazo Web | 2 = Yazo App
            required: true
            description: 'Product Identifier of identification of the product that is using the API.'
            example: '1'
        security:
          - bearerToken: []
        responses:
          '200':
            description: list of users response object
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/AuthConfig'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'

    # banner routes
    /admin/banners:
      get:
        summary: List banners
        description: Get all banners
        operationId: admin.banners.list
        tags:
          - Admin - Banner
        security:
          - bearerToken: []
        parameters:
          - name: Hub-Event-Id
            in: header
            description: Hub event id
            required: true
            schema:
              type: string
              example: '1'
        responses:
          '200':
            description: banners response object
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Banner'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
      post:
        summary: Store banner
        description: Create banner
        operationId: admin.banners.store
        tags:
          - Admin - Banner
        security:
          - bearerToken: []
        parameters:
          - name: Hub-Event-Id
            in: header
            description: Hub event id
            required: true
            schema:
              type: string
              example: '1'
        requestBody:
          description: Create banner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreBanner'
          required: true
        responses:
          '200':
            description: banner response object
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Banner'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
    /admin/banners/{banner_id}:
      get:
        summary: Get banner by id
        description: Get banner by id
        operationId: admin.banners.get
        tags:
          - Admin - Banner
        security:
          - bearerToken: []
        parameters:
          - name: banner_id
            in: path
            description: Banner id
            required: true
            schema:
              type: integer
              example: 1
          - name: Hub-Event-Id
            in: header
            description: Hub event id
            required: true
            schema:
              type: string
              example: '1'
        responses:
          '200':
            description: banner response object
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Banner'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
      put:
        summary: Edit banner
        description: Edit banner
        operationId: admin.banners.edit
        tags:
          - Admin - Banner
        parameters:
          - name: banner_id
            in: path
            description: Banner id
            required: true
            schema:
              type: integer
              example: 1
          - name: Hub-Event-Id
            in: header
            description: Hub event id
            required: true
            schema:
              type: string
              example: '1'
        security:
          - bearerToken: []
        requestBody:
          description: Update banner
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditBanner'
          required: true
        responses:
          '200':
            description: banner response object
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Banner'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
      delete:
        summary: Delete banner
        description: Delete banner
        operationId: admin.banners.delete
        tags:
          - Admin - Banner
        parameters:
          - name: banner_id
            in: path
            description: Banner id
            required: true
            schema:
              type: integer
              example: 1
          - name: Hub-Event-Id
            in: header
            description: Hub event id
            required: true
            schema:
              type: string
              example: '1'
        security:
          - bearerToken: []
        responses:
          '200':
            description: banner response object
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Banner'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
    /admin/banners/delete/many:
      put:
        summary: Delete many banners
        description: Delete many banners
        operationId: admin.banners.delete.many
        tags:
          - Admin - Banner
        security:
          - bearerToken: []
        parameters:
          - name: Hub-Event-Id
            in: header
            description: Hub event id
            required: true
            schema:
              type: string
              example: '1'
        requestBody:
          description: Delete many banners
          content:
            application/json:
              schema:
                type: object
                properties:
                  banner_ids:
                    type: array
                    items:
                      type: number
                    example:
                      - 1
                      - 2
                      - 3
          required: true
        responses:
          '200':
            description: banner response object
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Banner'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
    /admin/banners/order:
      put:
        summary: Edit banner order
        description: Edit banner order
        operationId: admin.banners.order
        tags:
          - Admin - Banner
        security:
          - bearerToken: []
        parameters:
          - name: Hub-Event-Id
            in: header
            description: Hub event id
            required: true
            schema:
              type: string
              example: '1'
        requestBody:
          description: Update banner order
          content:
            application/json:
              schema:
                type: object
                properties:
                  banners:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: number
                        order:
                          type: number
                    example:
                      - id: 1
                        order: 1
                      - id: 2
                        order: 2
                      - id: 3
                        order: 3
          required: true
        responses:
          '200':
            description: banner response object
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Banner'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
    /user/banners:
      get:
        summary: List banners
        description: Get all banners
        operationId: user.banners.list
        tags:
          - User - Banner
        security:
          - bearerToken: []
        parameters:
          - name: Hub-Event-Id
            in: header
            description: Hub event id
            required: true
            schema:
              type: string
              example: '1'
        responses:
          '200':
            description: banner response object
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Banner'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
    /user/banners/{banner_id}:
      get:
        summary: Get banner by id
        description: Get banner by id
        operationId: user.banners.get
        tags:
          - User - Banner
        security:
          - bearerToken: []
        parameters:
          - name: banner_id
            in: path
            description: banner id
            required: true
            schema:
              type: number
          - name: Hub-Event-Id
            in: header
            description: Hub event id
            required: true
            schema:
              type: string
              example: '1'
        responses:
          '200':
            description: banner response object
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Banner'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'

    # bookmark
    /user/bookmark/partner:
      post:
        summary: Bookmark partner
        description: Bookmark partner
        operationId: user.bookmark.partner
        tags:
          - User - Bookmark
        security:
          - bearerToken: []
        parameters:
          - name: Hub-Event-Id
            in: header
            description: Hub event id
            required: true
            schema:
              type: string
              example: '1'
        requestBody:
          description: Bookmark partner
          content:
            application/json:
              schema:
                type: object
                properties:
                  partner_id:
                    type: number
                example:
                  partner_id: 1
          required: true
        responses:
          '200':
            description: bookmark response object
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Bookmark'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
    /user/bookmark/partner/{partner_id}:
      delete:
        summary: Delete bookmark partner
        description: Delete bookmark partner
        operationId: user.bookmark.partner.delete
        tags:
          - User - Bookmark
        security:
          - bearerToken: []
        parameters:
          - name: partner_id
            in: path
            description: partner id
            required: true
            schema:
              type: number
          - name: Hub-Event-Id
            in: header
            description: Hub event id
            required: true
            schema:
              type: string
              example: '1'
        responses:
          '200':
            description: bookmark response object
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Bookmark'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
    /user/bookmark/schedule:
      post:
        summary: Bookmark schedule
        description: Bookmark schedule
        operationId: user.bookmark.schedule
        tags:
          - User - Bookmark
        security:
          - bearerToken: []
        parameters:
          - name: Hub-Event-Id
            in: header
            description: Hub event id
            required: true
            schema:
              type: string
              example: '1'
        requestBody:
          description: Bookmark schedule
          content:
            application/json:
              schema:
                type: object
                properties:
                  schedule_id:
                    type: number
                example:
                  schedule_id: 1
          required: true
        responses:
          '200':
            description: bookmark response object
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Bookmark'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
    /user/bookmark/schedule/{schedule_id}:
      delete:
        summary: Delete bookmark schedule
        description: Delete bookmark schedule
        operationId: user.bookmark.schedule.delete
        tags:
          - User - Bookmark
        security:
          - bearerToken: []
        parameters:
          - name: schedule_id
            in: path
            description: schedule id
            required: true
            schema:
              type: number
          - name: Hub-Event-Id
            in: header
            description: Hub event id
            required: true
            schema:
              type: string
              example: '1'
        responses:
          '200':
            description: bookmark response object
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Bookmark'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
    /user/bookmark/speaker:
      post:
        summary: Bookmark speaker
        description: Bookmark speaker
        operationId: user.bookmark.speaker
        tags:
          - User - Bookmark
        security:
          - bearerToken: []
        parameters:
          - name: Hub-Event-Id
            in: header
            description: Hub event id
            required: true
            schema:
              type: string
              example: '1'
        requestBody:
          description: Bookmark speaker
          content:
            application/json:
              schema:
                type: object
                properties:
                  speaker_id:
                    type: number
                example:
                  speaker_id: 1
          required: true
        responses:
          '200':
            description: bookmark response object
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Bookmark'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
    /user/bookmark/{speaker_id}:
      delete:
        summary: Delete bookmark speaker
        description: Delete bookmark speaker
        operationId: user.bookmark.speaker.delete
        tags:
          - User - Bookmark
        security:
          - bearerToken: []
        parameters:
          - name: speaker_id
            in: path
            description: speaker id
            required: true
            schema:
              type: number
          - name: Hub-Event-Id
            in: header
            description: Hub event id
            required: true
            schema:
              type: string
              example: '1'
        responses:
          '200':
            description: bookmark response object
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Bookmark'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
    /user/bookmark/partner_product:
      post:
        summary: Bookmark partner product
        description: Bookmark partner product
        operationId: user.bookmark.partner_product
        tags:
          - User - Bookmark
        security:
          - bearerToken: []
        parameters:
          - name: Hub-Event-Id
            in: header
            description: Hub event id
            required: true
            schema:
              type: string
              example: '1'
        requestBody:
          description: Bookmark partner product
          content:
            application/json:
              schema:
                type: object
                properties:
                  partner_product_id:
                    type: number
                example:
                  partner_product_id: 1
          required: true
        responses:
          '200':
            description: bookmark response object
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Bookmark'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
    /user/bookmark/partner_product/{partner_product_id}:
      delete:
        summary: Delete bookmark partner product
        description: Delete bookmark partner product
        operationId: user.bookmark.partner_product.delete
        tags:
          - User - Bookmark
        security:
          - bearerToken: []
        parameters:
          - name: partner_product_id
            in: path
            description: partner product id
            required: true
            schema:
              type: number
          - name: Hub-Event-Id
            in: header
            description: Hub event id
            required: true
            schema:
              type: string
              example: '1'
        responses:
          '200':
            description: bookmark response object
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Bookmark'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'

    # cadaster item
    /admin/cadaster_item:
      get:
        summary: List cadaster items
        description: List cadaster items
        operationId: admin.cadaster_item.list
        tags:
          - Admin - Cadaster Item
        security:
          - bearerToken: []
        parameters:
          - name: Hub-Event-Id
            in: header
            description: Hub event id
            required: true
            schema:
              type: string
              example: '1'
        responses:
          '200':
            description: cadaster item response object
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/CadasterItem'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
      post:
        summary: Create cadaster item
        description: Create cadaster item
        operationId: admin.cadaster_item.create
        tags:
          - Admin - Cadaster Item
        security:
          - bearerToken: []
        parameters:
          - name: Hub-Event-Id
            in: header
            description: Hub event id
            required: true
            schema:
              type: string
              example: '1'
        requestBody:
          description: Create cadaster item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoreCadasterItem'
        responses:
          '200':
            description: cadaster item response object
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CadasterItem'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
    /admin/cadaster_item/{cadaster_item_id}:
      put:
        summary: Edit cadaster item
        description: Edit cadaster item
        operationId: admin.cadaster_item.edit
        tags:
          - Admin - Cadaster Item
        security:
          - bearerToken: []
        parameters:
          - name: cadaster_item_id
            in: path
            description: cadaster item id
            required: true
            schema:
              type: number
          - name: Hub-Event-Id
            in: header
            description: Hub event id
            required: true
            schema:
              type: string
              example: '1'
        requestBody:
          description: Update cadaster item
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EditCadasterItem'
        responses:
          '200':
            description: cadaster item response object
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CadasterItem'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
      delete:
        summary: Delete cadaster item
        description: Delete cadaster item
        operationId: admin.cadaster_item.delete
        tags:
          - Admin - Cadaster Item
        security:
          - bearerToken: []
        parameters:
          - name: cadaster_item_id
            in: path
            description: cadaster item id
            required: true
            schema:
              type: number
          - name: Hub-Event-Id
            in: header
            description: Hub event id
            required: true
            schema:
              type: string
              example: '1'
        responses:
          '200':
            description: cadaster item response object
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/CadasterItem'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
    /admin/order/cadaster_item:
      put:
        summary: Edit cadaster item order
        description: Edit cadaster item order
        operationId: admin.cadaster_item.edit_order
        tags:
          - Admin - Cadaster Item
        security:
          - bearerToken: []
        parameters:
          - name: Hub-Event-Id
            in: header
            description: Hub event id
            required: true
            schema:
              type: string
              example: '1'
        requestBody:
          description: Update cadaster item order
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderCadasterItem'
        responses:
          '200':
            description: cadaster item response object
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
    /user/cadaster_item:
      get:
        summary: List cadaster items
        description: List cadaster items
        operationId: user.cadaster_item.list
        tags:
          - User - Cadaster Item
        security:
          - bearerToken: []
        parameters:
          - name: Hub-Event-Id
            in: header
            description: Hub event id
            required: true
            schema:
              type: string
              example: '1'
        responses:
          '200':
            description: cadaster item response object
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/CadasterItem'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
    /user/dropdown_attribute:
      get:
        summary: List dropdown attributes
        description: List dropdown attributes
        operationId: user.dropdown_attribute.list
        tags:
          - User - Cadaster Item
        security:
          - bearerToken: []
        parameters:
          - name: attribute_ref
            in: query
            description: attribute ref
            required: true
            schema:
              type: string
              example: 'dropdown_10'
          - name: Hub-Event-Id
            in: header
            description: Hub event id
            required: true
            schema:
              type: string
              example: '1'
        responses:
          '200':
            description: dropdown attribute response object
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/CadasterItem'
          '400':
            description: Bad Request
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '404':
            description: Not Found
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
          '500':
            description: Internal Server Error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'

    # category
    /admin/categories:
      get:
        summary: List Categories
        operationId: admin.categories.list
        description: |
          Returns a list of categories
        tags:
          - Admin - Category
        parameters:
          - name: Hub-Event-Id
            in: header
            description: Hub event id
            required: true
            schema:
              type: string
              example: '1'
          - in: query
            name: page
            schema:
              type: integer
              format: int32
            example: 1
          - in: query
            name: per_page
            schema:
              type: integer
              format: int32
            example: 10
          - in: query
            name: search
            schema:
              type: string
            example: 'Category name'
          # Add other query parameters as needed
        security:
          - bearerToken: []
        responses:
          '200':
            description: A list of categories
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Category' # You need to define the Category schema

      post:
        summary: Create a new Category
        operationId: admin.categories.store
        description: |
          Creates a new category
        tags:
          - Admin - Category
        security:
          - bearerToken: []
        parameters:
          - name: Hub-Event-Id
            in: header
            description: Hub event id
            required: true
            schema:
              type: string
              example: '1'
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ICategoryDTOStore'
        responses:
          '201':
            description: The created category
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Category' # You need to define the Category schema
    /admin/categories/{category_id}:
      get:
        summary: Get a Category by ID
        operationId: admin.categories.get
        description: |
          Returns a single category
        tags:
          - Admin - Category
        parameters:
          - in: path
            name: category_id
            required: true
            schema:
              type: integer
              format: int64
            example: 1
          - name: Hub-Event-Id
            in: header
            description: Hub event id
            required: true
            schema:
              type: string
              example: '1'
        security:
          - bearerToken: []
        responses:
          '200':
            description: The requested category
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Category' # You need to define the Category schema

      put:
        summary: Edit a Category
        operationId: admin.categories.edit
        description: |
          Returns the updated category
        tags:
          - Admin - Category
        parameters:
          - in: path
            name: category_id
            required: true
            schema:
              type: integer
              format: int64
            example: 1
          - name: Hub-Event-Id
            in: header
            description: Hub event id
            required: true
            schema:
              type: string
              example: '1'
        security:
          - bearerToken: []
        requestBody:
          required: true
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ICategoryDTOEdit'
        responses:
          '200':
            description: The updated category
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Category' # You need to define the Category schema
    /admin/categories/{category_id}/order:
      patch:
        summary: Edit the order of a Category
        operationId: admin.categories.edit.order
        description: |
          Returns the updated category
        tags:
          - Admin - Category
        parameters:
          - in: path
            name: category_id
            required: true
            schema:
              type: integer
              format: int64
            example: 1
          - name: Hub-Event-Id
            in: header
            description: Hub event id
            required: true
            schema:
              type: string
              example: '1'
        security:
          - bearerToken: []
        requestBody:
          required: true
          description: |
            The order of the category
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ICategoryDTOOrder'
        responses:
          '200':
            description: The updated category
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Category'
    /admin/categories/{category_id}/delete:
      put:
        summary: Delete a Category
        operationId: admin.categories.delete
        description: |
          Returns the deleted category
        tags:
          - Admin - Category
        parameters:
          - in: path
            name: category_id
            required: true
            schema:
              type: integer
              format: int64
            example: 1
          - name: Hub-Event-Id
            in: header
            description: Hub event id
            required: true
            schema:
              type: string
              example: '1'
        requestBody:
          required: true
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      type: integer
                    example: [1, 2]
        security:
          - bearerToken: []
        responses:
          '200':
            description: Category deleted successfully
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ApiResponse'
    /user/categories:
      get:
        summary: List categories
        operationId: user.categories.list
        description: |
          Returns a list of categories
        tags:
          - User - Category
        parameters:
          - name: Hub-Event-Id
            in: header
            description: Hub event id
            required: true
            schema:
              type: string
              example: '1'
          - in: query
            name: page
            schema:
              type: integer
              format: int32
              example: 1
          - in: query
            name: per_page
            schema:
              type: integer
              format: int32
            example: 10
          - in: query
            name: search
            schema:
              type: string
            example: 'Category name'
          - in: query
            name: type
            schema:
              type: string
              example: 'partner'
            required: true
            example: 'partner'
          - in: query
            name: menu_item_id
            schema:
              type: integer
              format: int32
              example: 1
            example: 1
          - in: query
            name: product_ids
            schema:
              type: array
              items:
                type: integer
                format: int32
                example: 1
            example:
              - 1
              - 2
        security:
          - bearerToken: []
        responses:
          '200':
            description: A list of categories
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Category' # You need to define the Category schema
    /user/categories/{category_id}:
      get:
        summary: Get a Category
        operationId: user.categories.get
        description: |
          Returns a single category
        tags:
          - User - Category
        parameters:
          - in: path
            name: category_id
            required: true
            schema:
              type: integer
              format: int64
            example: 1
          - name: Hub-Event-Id
            in: header
            description: Hub event id
            required: true
            schema:
              type: string
              example: '1'
        security:
          - bearerToken: []
        responses:
          '200':
            description: The requested category
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Category' # You need to define the Category schema

    # dashboard
    /admin/dashboard/audience:
      get:
        summary: Get audience
        operationId: admin.dashboard.audience
        description: |
          Returns a single category
        tags:
          - Admin - Dashboard
        parameters:
          - name: Hub-Event-Id
            in: header
            description: Hub event id
            required: true
            schema:
              type: string
              example: '1'
        security:
          - bearerToken: []
        responses:
          '200':
            description: The requested category
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/AudiencePayloadResponse'
    /admin/dashboard/bookmark:
      get:
        summary: Get bookmark
        operationId: admin.dashboard.bookmark
        description: |
          Returns a single category
        tags:
          - Admin - Dashboard
        parameters:
          - name: Hub-Event-Id
            in: header
            description: Hub event id
            required: true
            schema:
              type: string
              example: '1'
        security:
          - bearerToken: []
        responses:
          '200':
            description: The requested category
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/BookmarkPayloadResponse'
    /admin/dashboard/content:
      get:
        summary: Get content
        operationId: admin.dashboard.content
        description: |
          Returns a single category
        tags:
          - Admin - Dashboard
        parameters:
          - name: Hub-Event-Id
            in: header
            description: Hub event id
            required: true
            schema:
              type: string
              example: '1'
        security:
          - bearerToken: []
        responses:
          '200':
            description: The requested category
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/ContentPayloadResponse'
    /admin/dashboard/interactions:
      get:
        summary: Get interactions
        operationId: admin.dashboard.interactions
        description: |
          Returns a single category
        tags:
          - Admin - Dashboard
        parameters:
          - name: Hub-Event-Id
            in: header
            description: Hub event id
            required: true
            schema:
              type: string
              example: '1'
        security:
          - bearerToken: []
        responses:
          '200':
            description: The requested category
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/InteractionsPayloadResponse'
    /admin/dashboard/lead:
      get:
        summary: Get last access
        operationId: admin.dashboard.last-access
        description: |
          Returns a single category
        tags:
          - Admin - Dashboard
        parameters:
          - name: Hub-Event-Id
            in: header
            description: Hub event id
            required: true
            schema:
              type: string
              example: '1'
        security:
          - bearerToken: []
        responses:
          '200':
            description: The requested category
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/LeadPayloadResponse'
    /admin/dashboard/social:
      get:
        summary: Get social
        operationId: admin.dashboard.social
        description: |
          Returns a single category
        tags:
          - Admin - Dashboard
        parameters:
          - name: Hub-Event-Id
            in: header
            description: Hub event id
            required: true
            schema:
              type: string
              example: '1'
        security:
          - bearerToken: []
        responses:
          '200':
            description: The requested category
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/SocialItemCountResponse'
    /admin/dashboard/social/most-interacted-posts:
      get:
        summary: Get most interacted posts
        operationId: admin.dashboard.social.most-interacted-posts
        description: |
          Returns a single category
        tags:
          - Admin - Dashboard
        parameters:
          - name: Hub-Event-Id
            in: header
            description: Hub event id
            required: true
            schema:
              type: string
              example: '1'
          - name: start_date
            in: query
            description: Start date for filtering posts (optional)
            schema:
              type: string
            example: '2023-05-01'
          - name: end_date
            in: query
            description: End date for filtering posts (optional, defaults to current date)
            schema:
              type: string
            example: '2023-05-04'
        security:
          - bearerToken: []
        responses:
          '200':
            description: The requested category
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/MostInteractedPostsResponse'
    /admin/dashboard/social/most-interactive-users:
      get:
        summary: Get most interactive users
        operationId: admin.dashboard.social.most-interactive-users
        description: |
          Returns a single category
        tags:
          - Admin - Dashboard
        security:
          - bearerToken: []
        parameters:
          - name: Hub-Event-Id
            in: header
            description: Hub event id
            required: true
            schema:
              type: string
              example: '1'
          - name: start_date
            in: query
            description: Start date for filtering users (optional)
            schema:
              type: string
            example: '2023-05-01'
          - name: end_date
            in: query
            description: End date for filtering users (optional, defaults to current date)
            schema:
              type: string
            example: '2023-05-04'
        responses:
          '200':
            description: The requested category
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/GetMostInteractiveUsersResponse'

  tags:
    - name: Session
      description: Operations about session

    # ADMIN TAGS
    - name: Admin - Auth Config
      description: Operations about auth config for admin
    - name: Admin - Banner
      description: Operations about banner for admin
    - name: Admin - Cadaster Item
      description: Operations about category for admin
    - name: Admin - Category
      description: Operations about category
    - name: Admin - Dashboard
      description: Operations about dashboard

    # USER TAGS
    - name: User - Auth Config
      description: Operations about auth config for user
    - name: User - Banner
      description: Operations about banner for user
    - name: User - Bookmark
      description: Operations about bookmark for user
    - name: User - Cadaster Item
      description: Operations about cadaster item for user
    - name: User - Category
      description: Operations about category for user
  components:
    securitySchemes:
      bearerToken:
        type: http
        scheme: bearer
        bearerFormat: JWT
    responses:
      '200':
        description: OK
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiResponse'
      '201':
        description: Created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiResponse'
      '400':
        description: Bad Request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiResponse'
      '401':
        description: Unauthorized
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiResponse'
      '403':
        description: Forbidden
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiResponse'
      '404':
        description: Not Found
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiResponse'
      '500':
        description: Internal Server Error
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApiResponse'
    schemas:
      # user schemas
      User:
        description: User entity
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          name:
            type: string
            example: 'Joe Jolas'
          email:
            type: string
            example: terter@yazo.com.br
          attributes:
            type: object
            properties:
              cpf:
                type: string
                example: '12345678901'
              phone:
                type: string
                example: '11999999999'
            example:
              phone: '11999999999'
              cpf: '99999999999'
          admin:
            type: boolean
            example: false
          avatar:
            type: string
            example: 'https://www.yazo.com.br/wp-content/uploads/2021/04/cropped-lett_color.png'
          registration_completed:
            type: boolean
            example: true
          external_id:
            type: string
            example: '123456789'
          ticket_type:
            type: string
            example: 'free'
          access_type:
            type: string
            example: 'common_user'
          online:
            type: boolean
            example: true
          language:
            type: string
          has_highlight:
            type: boolean
          ranking_position:
            type: integer
            format: int64
          cookie_accepted_at:
            type: string
            format: date-time
            example: '2021-04-01T00:00:00.000Z'
          role_id:
            type: integer
            format: int64
            example: 6
          saw_tutorial:
            type: boolean
            example: true
          should_replace_password:
            type: boolean
            example: false
          was_imported:
            type: boolean
            example: false
          allow_marketing:
            type: boolean
            example: true
          allow_post:
            type: boolean
            example: true
          meta:
            type: object
            properties:
              orderId:
                type: integer
                format: int64
                example: 1
              completed_registration_at:
                type: string
                format: date-time
                example: '2021-04-01T00:00:00.000Z'
              connection_id:
                type: integer
                format: int64
                example: 1
              connection_status:
                type: string
                example: pending
              friends_in_common:
                type: integer
                format: int64
                example: 1
        example:
          id: 1
          name: 'Joe Jolas'
          email: tester@yazo.com.br
          attributes:
            phone: '11999999999'
            cpf: 999.999.999-99
            state: 'SP'
            city: 'São Paulo'
            country: 'Brasil'
          admin: false
          avatar: 'https://www.yazo.com.br/wp-content/uploads/2021/04/cropped-lett_color.png'
          registration_completed: true
          external_id: '123456789'
          ticket_type: 'free'
          access_type: 'common_user'
          online: true
          language: 'portugues_1'
          has_highlight: false
          ranking_position: 1
          cookie_accepted_at: '2021-04-01T00:00:00.000Z'
          role_id: 6
          saw_tutorial: true
          should_replace_password: false
          was_imported: false
          allow_marketing: true
          allow_post: true
          meta:
            orderId: 1
            completed_registration_at: '2021-04-01T00:00:00.000Z'
            connection_id: 1
            connection_status: pending
            friends_in_common: 1

      # auth config schemas
      AuthConfig:
        description: Auth config entity
        type: object
        properties:
          auth_config_id:
            type: integer
            format: int64
            example: 1
          unique_fields:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                  example: 1
                type:
                  type: string
                  example: 'email'
                icon_type:
                  type: string
                  example: 'email'
                order:
                  type: integer
                  format: int64
                  example: 2
          title:
            type: object
            properties:
              ingles_2:
                type: string
                example: 'E-mail'
              espanhol_3:
                type: string
                example: 'E-mail'
              portugues_1:
                type: string
                example: 'E-mail'
          ref_code:
            type: string
            example: 'email'
          placeholder:
            type: object
            properties:
              ingles_2:
                type: string
                example: 'E-mail'
              espanhol_3:
                type: string
                example: 'E-mail'
              portugues_1:
                type: string
                example: 'E-mail'
          meta:
            type: object
            properties:
              selected:
                type: boolean
                example: true
      EditAuthConfig:
        description: Auth config entity
        type: object
        properties:
          has_password:
            type: boolean
            example: true
          unique_field_id:
            type: integer
            format: int64
            example: 1
          complementary_field_ids:
            type: array
            items:
              type: integer
              format: int64
              example: 1
        example:
          has_password: true
          unique_field_id: 1
          complementary_field_ids:
            - 1
            - 2

      # banner schemas
      Banner:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          image:
            type: string
            example: 'https://www.yazo.com.br/wp-content/uploads/2021/04/lett_branco.png'
          url:
            type: string
            example: 'https://www.yazo.com.br/'
          order:
            type: integer
            format: int64
            example: 1
          title:
            format: string
            example: 'Yazo'
          hub_event_id:
            type: integer
            format: int64
            example: 1
        required:
          - title
          - image
          - url
          - order
        example:
          id: 1
          image: 'https://www.yazo.com.br/wp-content/uploads/2021/04/lett_branco.png'
          url: 'https://www.yazo.com.br/'
          order: 1
          title: 'Yazo'
          hub_event_id: 1
      StoreBanner:
        type: object
        properties:
          title:
            type: string
            example: 'Yazo'
          image:
            type: string
            example: 'https://www.yazo.com.br/wp-content/uploads/2021/04/lett_branco.png'
          url:
            type: string
            example: 'https://www.yazo.com.br/'
          order:
            type: integer
            format: int64
            example: 1
        required:
          - title
          - image
          - url
          - order
        example:
          title: 'Yazo'
          image: 'https://www.yazo.com.br/wp-content/uploads/2021/04/lett_branco.png'
          url: 'https://www.yazo.com.br/'
          order: 1
          hub_event_id: 1
      EditBanner:
        type: object
        properties:
          title:
            type: string
            example: 'Yazo Edited'
          image:
            type: string
            example: 'https://www.yazo.com.br/wp-content/uploads/2021/04/lett_branco.png'
          url:
            type: string
            example: 'https://www.yazo.com.br/'
          order:
            type: integer
            format: int64
            example: 2
        example:
          title: 'Yazo Edited'
          image: 'https://www.yazo.com.br/wp-content/uploads/2021/04/lett_branco.png'
          url: 'https://www.yazo.com.br/'
          order: 2

      # bookmark schemas
      Bookmark:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          type:
            type: string
            example: 'partners'
          ref_id:
            type: integer
            format: int64
            example: 1
          user_id:
            type: integer
            format: int64
            example: 1

      # cadaster item schemas
      CadasterItem:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          type:
            type: string
            example: 'text'
          order:
            type: integer
            format: int64
            example: 2
          active:
            type: boolean
            example: true
          required:
            type: boolean
            example: true
          deletable:
            type: boolean
            example: true
          icon_type:
            type: string
            example: 'person'
          ref_code:
            type: string
            example: 'name_2'
          dependence_id:
            type: integer
            format: int64
            example: 1
          placeholder:
            type: object
            properties:
              portugues_1:
                type: string
                example: 'Nome'
              ingles_2:
                type: string
                example: 'Nome'
              espanhol_3:
                type: string
                example: 'Nome'
              search_translation:
                type: string
                example: 'Nome'
            example:
              portugues_1: 'Nome'
              ingles_2: 'Nome'
              espanhol_3: 'Nome'
              search_translation: 'Nome'
          title:
            type: object
            properties:
              portugues_1:
                type: string
                example: 'Nome'
              ingles_2:
                type: string
                example: 'Nome'
              espanhol_3:
                type: string
                example: 'Nome'
              search_translation:
                type: string
                example: 'Nome'
            example:
              portugues_1: 'Nome'
              ingles_2: 'Nome'
              espanhol_3: 'Nome'
              search_translation: 'Nome'
          max:
            type: integer
            format: int64
            example: 1
          min:
            type: integer
            format: int64
            example: 1
          unique:
            type: boolean
            example: true
          hidden:
            type: boolean
            example: true
          is_user_sub_title:
            type: boolean
            example: true
          searchable:
            type: boolean
            example: true
          dropdown_attributes:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                  example: 1
                title:
                  type: string
                  example: 'Opção 1'
                attribute_ref:
                  type: string
                  example: 'tag_1'
                attribute_dependence:
                  type: string
                  example: 'tag_1'
                active:
                  type: boolean
                  example: true
                order:
                  type: integer
                  format: int64
                  example: 1
          meta:
            type: object
            properties:
              selected:
                type: boolean
                example: true
        required:
          - title
          - ref_code
          - placeholder
          - type
          - unique
          - icon_type
          - order
          - meta
      StoreCadasterItem:
        type: object
        properties:
          title:
            type: object
            properties:
              portugues_1:
                type: string
                example: 'Nome'
              ingles_2:
                type: string
                example: 'Nome'
              espanhol_3:
                type: string
                example: 'Nome'
            example:
              portugues_1: 'Nome'
              ingles_2: 'Nome'
              espanhol_3: 'Nome'
          type:
            type: string
            example: 'text'
          order:
            type: integer
            format: int64
            example: 2
          required:
            type: boolean
            example: true
          unique:
            type: boolean
            example: true
          icon_type:
            type: string
            example: 'person'
          ref_code:
            type: string
            example: 'name_2'
          dependence_id:
            type: integer
            format: int64
            example: 1
          placeholder:
            type: object
            properties:
              portugues_1:
                type: string
                example: 'Nome'
              ingles_2:
                type: string
                example: 'Nome'
              espanhol_3:
                type: string
                example: 'Nome'
              search_translation:
                type: string
                example: 'Nome'
            example:
              portugues_1: 'Nome'
              ingles_2: 'Nome'
              espanhol_3: 'Nome'
              search_translation: 'Nome'
          max:
            type: integer
            format: int64
            example: 1
          min:
            type: integer
            format: int64
            example: 1
          dropdown_attributes:
            type: array
            items:
              type: object
              properties:
                title:
                  type: object
                  properties:
                    portugues_1:
                      type: string
                      example: 'Nome'
                    ingles_2:
                      type: string
                      example: 'Nome'
                    espanhol_3:
                      type: string
                      example: 'Nome'
                  example:
                    portugues_1: 'Nome'
                    ingles_2: 'Nome'
                    espanhol_3: 'Nome'
          is_user_sub_title:
            type: boolean
            example: true
          hub_event_ids:
            type: array
            items:
              type: integer
              format: int64
            example:
              - 1
              - 2
        required:
          - title
          - type
          - order
          - required
          - unique
        example:
          title:
            portugues_1: 'Nome'
            ingles_2: 'Nome'
            espanhol_3: 'Nome'
          type: 'text'
          order: 2
          required: true
          unique: true
          icon_type: 'person'
          ref_code: 'name_2'
          dependence_id: 1
          placeholder:
            portugues_1: 'Nome'
            ingles_2: 'Nome'
            espanhol_3: 'Nome'
            search_translation: 'Nome'
          max: 1
          min: 1
          is_user_sub_title: true
          hub_event_ids:
            - 1
            - 2
      EditCadasterItem:
        type: object
        properties:
          hidden:
            type: boolean
            example: true
          title:
            type: object
            properties:
              portugues_1:
                type: string
                example: 'Nome'
              ingles_2:
                type: string
                example: 'Nome'
              espanhol_3:
                type: string
                example: 'Nome'
            example:
              portugues_1: 'Nome'
              ingles_2: 'Nome'
              espanhol_3: 'Nome'
          type:
            type: string
            example: 'text'
          order:
            type: integer
            format: int64
            example: 2
          required:
            type: boolean
            example: true
          unique:
            type: boolean
            example: true
          icon_type:
            type: string
            example: 'person'
          ref_code:
            type: string
            example: 'name_2'
          dependence_id:
            type: integer
            format: int64
            example: 1
          placeholder:
            type: object
            properties:
              portugues_1:
                type: string
                example: 'Nome'
              ingles_2:
                type: string
                example: 'Nome'
              espanhol_3:
                type: string
                example: 'Nome'
              search_translation:
                type: string
                example: 'Nome'
            example:
              portugues_1: 'Nome'
              ingles_2: 'Nome'
              espanhol_3: 'Nome'
              search_translation: 'Nome'
          max:
            type: integer
            format: int64
            example: 1
          min:
            type: integer
            format: int64
            example: 1
          dropdown_attributes:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                  example: 1
                title:
                  type: string
                  example: 'Opção 1'
                attribute_ref:
                  type: string
                  example: 'tag_1'
                attribute_dependence:
                  type: string
                  example: 'tag_1'
                active:
                  type: boolean
                  example: true
                order:
                  type: integer
                  format: int64
                  example: 1
          is_user_sub_title:
            type: boolean
            example: true
          hub_event_ids:
            type: array
            items:
              type: integer
              format: int64
            example:
              - 1
              - 2
        example:
          title:
            portugues_1: 'Nome'
            ingles_2: 'Nome'
            espanhol_3: 'Nome'
          type: 'text'
          order: 2
          required: true
          unique: true
          icon_type: 'person'
          ref_code: 'name_2'
          dependence_id: 1
          placeholder:
            portugues_1: 'Nome'
            ingles_2: 'Nome'
            espanhol_3: 'Nome'
            search_translation: 'Nome'
          max: 1
          min: 1
          is_user_sub_title: true
          hub_event_ids:
            - 1
            - 2
      OrderCadasterItem:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          order:
            type: integer
            format: int64
            example: 1
        required:
          - id
          - order
        example:
          id: 1
          order: 1

      # categories schemas
      Category:
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 1
          color:
            type: string
            example: '#321321'
          type:
            type: string
            example: 'example_type'
          order:
            type: integer
            format: int64
            example: 2
          active:
            type: boolean
            example: true
          level:
            type: string
            example: 'primary'
          name:
            type: object
            properties:
              portugues_1:
                type: string
                example: 'Categoria'
              ingles_2:
                type: string
                example: 'Category'
              espanhol_3:
                type: string
                example: 'Categoría'
              search_translation:
                type: string
                example: 'Categoria'
            example:
              portugues_1: 'Categoria'
              ingles_2: 'Category'
              espanhol_3: 'Categoría'
              search_translation: 'Categoria'
          menu_item_id:
            type: integer
            format: int64
            example: 1
          hub_event_id:
            type: integer
            format: int64
            nullable: true
            example: 1
          entity_register_id:
            type: integer
            format: int64
            example: 1
          created_at:
            type: string
            format: date-time
            example: '2023-05-03T00:00:00.000Z'
          updated_at:
            type: string
            format: date-time
            example: '2023-05-03T00:00:00.000Z'
        required:
          - id
          - color
          - type
          - order
          - active
          - level
          - name
          - menu_item_id
          - entity_register_id
      ICategoryDTOList:
        type: object
        properties:
          page:
            type: integer
            format: int32
            example: 1
          perPage:
            type: integer
            format: int32
            example: 10
          search:
            type: string
            example: 'Category name'
          type:
            $ref: '#/components/schemas/ICategory.Types'
          userId:
            type: integer
            format: int64
            example: 1
          onlyOne:
            type: boolean
            example: false
          productIds:
            type: array
            items:
              type: integer
              format: int64
          menuItemId:
            type: integer
            format: int64
            example: 1
      ICategoryDTOStore:
        type: object
        properties:
          name:
            type: object
            properties:
              portugues_1:
                type: string
                maxLength: 255
              ingles_2:
                type: string
                maxLength: 255
              espanhol_3:
                type: string
                maxLength: 255
          color:
            type: string
          level:
            type: string
            enum: [silver, gold, platinum]
          order:
            type: integer
            format: int32
          type:
            type: string
            enum: [partner, broadcast_room]
          menu_item_id:
            type: integer
            format: int64
          product_ids:
            type: array
            items:
              type: integer
              format: int64
            example:
              - 1
              - 2
        example:
          name:
            portugues_1: 'Categoria'
            ingles_2: 'Category'
            espanhol_3: 'Categoría'
          color: '#321321'
          level: 'silver'
          order: 1
          type: 'partner'
          menu_item_id: 1
          product_ids:
            - 1
            - 2
      ICategoryDTOEdit:
        type: object
        properties:
          color:
            type: string
            example: '#FF5733'
          type:
            $ref: '#/components/schemas/ICategory.Types'
          order:
            type: integer
            format: int64
            example: 2
          active:
            type: boolean
            example: true
          level:
            $ref: '#/components/schemas/ICategory.Levels'
          name:
            type: object
            properties:
              portugues_1:
                type: string
                example: 'Categoria'
              ingles_2:
                type: string
                example: 'Category'
              espanhol_3:
                type: string
                example: 'Categoría'
              search_translation:
                type: string
                example: 'Categoria'
        example:
          color: '#321321'
          type: 'partner'
          order: 2
          active: true
          level: 'silver'
          name:
            portugues_1: 'Categoria Editada'
            ingles_2: 'Edited Category'
            espanhol_3: 'Categoría'
            search_translation: 'Categoria Editada'
      ICategory.Types:
        type: string
        enum:
          - broadcast_room
          - partner
        example: broadcast_room
      ICategory.Levels:
        type: string
        enum:
          - silver
          - diamond
          - gold
        example: silver
      ICategoryDTOOrder:
        type: object
        properties:
          previous_id:
            type: integer
            format: int64
          next_id:
            type: integer
            format: int64

      # dashboard schemas
      AudiencePayloadResponse:
        type: object
        properties:
          registered_user_count:
            type: integer
            format: int32
            example: 6
          register_user_in_last_hour_count:
            type: integer
            format: int32
            example: 6
          online_user_count:
            type: integer
            format: int32
            example: 0
          access_count:
            type: integer
            format: int32
            example: 0
          registered_user_chart_payload:
            type: array
            items:
              type: object
              properties:
                date:
                  type: string
                  format: date-time
                  example: '2023-05-04T03:05:28.133Z'
                count:
                  type: string
                  example: '7'
        example:
          registered_user_count: 6
          register_user_in_last_hour_count: 6
          online_user_count: 0
          access_count: 0
          registered_user_chart_payload:
            - date: '2023-05-04T03:05:28.133Z'
              count: '7'
            - date: '2023-05-04T04:05:28.133Z'
              count: '0'
            - date: '2023-05-04T05:05:28.133Z'
              count: '0'
            - date: '2023-05-04T06:05:28.133Z'
              count: '0'
            - date: '2023-05-04T07:05:28.133Z'
              count: '0'
            - date: '2023-05-04T08:05:28.133Z'
              count: '0'
            - date: '2023-05-04T09:05:28.133Z'
              count: '0'
            - date: '2023-05-04T10:05:28.133Z'
              count: '0'
            - date: '2023-05-04T11:05:28.133Z'
              count: '0'
            - date: '2023-05-04T12:05:28.133Z'
              count: '0'
            - date: '2023-05-04T13:05:28.133Z'
              count: '0'
            - date: '2023-05-04T14:05:28.133Z'
              count: '0'
            - date: '2023-05-04T15:05:28.133Z'
              count: '0'
            - date: '2023-05-04T16:05:28.133Z'
              count: '0'
            - date: '2023-05-04T17:05:28.133Z'
              count: '0'
            - date: '2023-05-04T18:05:28.133Z'
              count: '0'
            - date: '2023-05-04T19:05:28.133Z'
              count: '0'
            - date: '2023-05-04T20:05:28.133Z'
              count: '0'
            - date: '2023-05-04T21:05:28.133Z'
              count: '0'
      BookmarkPayloadResponse:
        type: object
        properties:
          bookmarks:
            type: object
            properties:
              schedule_count:
                type: integer
                format: int32
                example: 13
              partner_count:
                type: integer
                format: int32
                example: 2
              product_count:
                type: integer
                format: int32
                example: 0
              speaker_count:
                type: integer
                format: int32
                example: 0
          more_bookmarked_schedules:
            type: array
            items:
              type: object
              properties:
                id:
                  type: integer
                  format: int32
                  example: 2
                title:
                  type: object
                  properties:
                    ingles_2:
                      type: string
                      example: ''
                    espanhol_3:
                      type: string
                      example: ''
                    portugues_1:
                      type: string
                      example: 'Dia 1'
                    search_translation:
                      type: string
                      example: '   Dia 1'
                start_time:
                  type: string
                  format: date-time
                  example: '2023-03-01T15:46:00.000+00:00'
                meta:
                  type: object
                  properties:
                    bookmarks_count:
                      type: string
                      example: '5'
                    is_bookmarked:
                      type: boolean
                      example: false
        example:
          bookmarks:
            schedule_count: 13
            partner_count: 2
            product_count: 0
            speaker_count: 0
          more_bookmarked_schedules:
            - id: 2
              title:
                ingles_2: ''
                espanhol_3: ''
                portugues_1: 'Dia 1'
                search_translation: '   Dia 1'
              start_time: '2023-03-01T15:46:00.000+00:00'
              meta:
                bookmarks_count: '5'
                is_bookmarked: false
      ContentPayloadResponse:
        type: object
        properties:
          readings:
            type: object
            properties:
              read_qrcode_count:
                type: integer
                format: int32
                example: 26
          quizzes:
            type: object
            properties:
              created_quiz_count:
                type: integer
                format: int32
                example: 0
              quiz_answer_count:
                type: integer
                format: int32
                example: 12
          notifications:
            type: object
            properties:
              sended_notification_count:
                type: integer
                format: int32
                example: 116
              open_notification_count:
                type: integer
                format: int32
                example: 238
        example:
          readings:
            read_qrcode_count: 26
          quizzes:
            created_quiz_count: 0
            quiz_answer_count: 12
          notifications:
            sended_notification_count: 116
            open_notification_count: 238
      InteractionsPayloadResponse:
        type: object
        properties:
          total_count:
            type: integer
            format: int32
            example: 0
          in_last_hour:
            type: object
            properties:
              post_count:
                type: integer
                format: int32
                example: 0
              comment_count:
                type: integer
                format: int32
                example: 0
              reaction_count:
                type: integer
                format: int32
                example: 0
              message_count:
                type: integer
                format: int32
                example: 0
              connection_count:
                type: integer
                format: int32
                example: 0
              lead_count:
                type: integer
                format: int32
                example: 0
          chart_payload:
            type: array
            items:
              type: object
              properties:
                date:
                  type: string
                  format: date-time
                  example: '2022-07-04T02:59:59.999Z'
                count:
                  type: string
                  example: '0'
      LeadPayloadResponse:
        type: object
        properties:
          total_count:
            type: integer
            format: int32
            example: 40
          in_last_hour:
            type: object
            properties:
              post_count:
                type: integer
                format: int32
                example: 0
              comment_count:
                type: integer
                format: int32
                example: 0
              reaction_count:
                type: integer
                format: int32
                example: 0
              message_count:
                type: integer
                format: int32
                example: 0
              connection_count:
                type: integer
                format: int32
                example: 0
              lead_count:
                type: integer
                format: int32
                example: 0
          chart_payload:
            type: array
            items:
              type: object
              properties:
                date:
                  type: string
                  format: date-time
                  example: '2023-05-01T01:59:59.999Z'
                count:
                  type: string
                  example: '0'
      SocialItemCountResponse:
        type: object
        properties:
          post_count:
            type: integer
            format: int32
            example: 0
          comment_count:
            type: integer
            format: int32
            example: 0
          reaction_count:
            type: integer
            format: int32
            example: 0
          message_count:
            type: integer
            format: int32
            example: 214
          connection_count:
            type: integer
            format: int32
            example: 11
        example:
          post_count: 0
          comment_count: 0
          reaction_count: 0
          message_count: 214
          connection_count: 11
      MostInteractedPostsResponse:
        type: object
        properties:
          most_interacted_posts:
            type: array
            items:
              type: object
              properties:
                id:
                  type: number
                text:
                  type: string
                status:
                  type: string
                meta:
                  type: object
                  properties:
                    post_comments_count:
                      type: string
                    post_reactions_count:
                      type: string
        example:
          most_interacted_posts:
            - id: 1
              text: Welcome
              status: disabled
              meta:
                post_comments_count: '0'
                post_reactions_count: '0'
      GetMostInteractiveUsersResponse:
        type: object
        properties:
          users_with_most_interactions:
            type: array
            items:
              type: object
              properties:
                id:
                  type: number
                name:
                  type: string
                avatar:
                  type: string
                interactions_count:
                  type: string
        example:
          users_with_most_interactions:
            - id: 1
              name: Yazo
              avatar: ''
              interactions_count: '2'

      # misc schemas
      Login:
        type: object
        properties:
          authenticators:
            type: array
            items:
              type: object
              properties:
                ref_code:
                  type: string
                value:
                  type: string
            description: 'List of authenticators to login. Example: [{ "ref_code": "email", "value": "tester@yazo.com.br"}]'
            example:
              - ref_code: email
                value: 'tester@yazo.com.br'
          password:
            type: string
            description: 'User password. Example: "123456"'
            example: '123456'
        required:
          - authenticators
          - password
        example:
          authenticators:
            - ref_code: email
              value: 'tester@yazo.com.br'
          password: '123456'
      Auth:
        properties:
          user_id:
            type: integer
            format: int64
          token:
            type: string
          type:
            type: string
          product_id:
            type: integer
            format: int64
          expires_at:
            type: string
            format: date-time
          id:
            type: integer
            format: int64
        example:
          user_id: 1
          token: some_token
          type: authentication
          product_id: 1
          expires_at: '2023-02-09T07:13:57.651-03:00'
          id: 1
      ApiResponse:
        type: object
        properties:
          message:
            type: string
          status:
            type: integer
            format: int32
          showable:
            type: boolean
        example:
          message: 'Não foi possível fazer o login, verifique suas credenciais ou tente novamente mais tarde'
          status: 401
          showable: true
      Meta:
        description: metadata for pagination
        type: object
        properties:
          total:
            type: number
            format: int64
          per_page:
            type: number
            format: int64
          current_page:
            type: number
            format: int64
          last_page:
            type: number
            format: int64
          first_page:
            type: number
            format: int64
          first_page_url:
            type: string
          last_page_url:
            type: string
          next_page_url:
            type: string
          previous_page_url:
            type: string
contentType: yaml
