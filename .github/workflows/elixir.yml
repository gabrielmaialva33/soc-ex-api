name: Elixir CI (Azure)
env:
  PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read
  issues: write
  packages: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Elixir
        uses: erlef/setup-beam@61e01a43a562a89bfc54c7f9a378ff67b03e4a21 # v1.16.0
        with:
          elixir-version: '1.15.2' # [Required] Define the Elixir version
          otp-version: '26.0'      # [Required] Define the Erlang/OTP version
      - name: Restore dependencies cache
        uses: actions/cache@v3
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-mix-
      - name: Install dependencies
        run: mix deps.get

      - name: Deploy to Azure
        env:
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}

        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 400 private_key
          ssh -o StrictHostKeyChecking=no -i private_key soc_ex@20.197.248.21 '
          DIR=/home/soc_ex/soc_ex_api
          cd /home/soc_ex
          source ~/.profile &&
          source ~/.bashrc &&
          source /home/soc_ex/.asdf/asdf.sh &&
          if [ ! -d $DIR ]
            then
                git clone https://github.com/gabrielmaialva33/soc_ex_api.git &&
                cd soc_ex_api && mix deps.get && mix ecto.setup && mix phx.compile
          else
            cd soc_ex_api && git checkout main && git fetch --all && git reset --hard origin/main && git pull origin main
          fi
          cd $DIR &&
          mix deps.get && mix ecto.setup && mix deps.compile && ecto.migrate &&
          mix phx.server & disown &&
          echo "Deployed successfully. ðŸš€"
          '
          
          
          
          
